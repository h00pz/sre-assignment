
---

#creating the VPC.
- name:               Create VPC
  ec2_vpc_net:
    name:             "{{ vpc_name }}"
    cidr_block:       "{{ vpc_cidr_block }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    state:            "present"
  register:           my_vpc

#save the id of the VPC in a new variable.
- name:               Set VPC ID in variable
  set_fact:
    vpc_id:           "{{ my_vpc.vpc.id }}"

#check if appserver subnet is created
- ec2_vpc_subnet_facts:
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    filters:
      "tag:Name":      AppServer

#creating the AppServer Subnet in the VPC.
- name:               Create Public Subnet
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "{{ subnet_1_cidr }}"
    az:               "{{ aws_region_az }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "{{ subnet_1_tag }}"
  register:           appserver_subnet

#save the id of the Public Subnet in a new variable.
- name:               Set Public Subnet ID in variable
  set_fact:
    appserver_subnet_id: "{{ appserver_subnet.subnet.id }}"

#creating the AllOther subnet in the VPC.
- name:               Create Public Subnet
  ec2_vpc_subnet:
    state:            "present"
    vpc_id:           "{{ vpc_id }}"
    cidr:             "{{ subnet_2_cidr }}"
    az:               "{{ aws_region_az }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    resource_tags:
      Name:           "{{ subnet_2_tag }}"
  register:           allother_subnet

#save the id of the Public Subnet in a new variable.
- name:               Set Public Subnet ID in variable
  set_fact:
    allother_subnet_id: "{{ allother_subnet.subnet.id }}"

#setup Internet Gateway.
- name:               Create Internet Gateway for VPC
  ec2_vpc_igw:
    vpc_id:           "{{ vpc_id }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    state:            "present"
  register:           my_vpc_igw

#save the id of the Internet Gateway in a new variable.
- name:               Set Internet Gateway ID in variable
  set_fact:
    igw_id:           "{{ my_vpc_igw.gateway_id }}"

#set up a route table. 
- name:               Set up public subnet route table
  ec2_vpc_route_table:
    vpc_id:           "{{ vpc_id }}"
    region:           "{{ aws_region }}"
    aws_access_key:   "{{ aws_access_key }}"
    aws_secret_key:   "{{ aws_secret_key }}"
    tags:
      Name:           "Public"  
    subnets:
      - "{{ appserver_subnet_id }}"
      - "{{ allother_subnet_id }}"
    routes:
      - dest:         "0.0.0.0/0"
        gateway_id:   "{{ igw_id }}"
